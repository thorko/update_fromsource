#!/bin/bash

php_version=$1
apache_version=$2
mode=$3

if [ "x$php_version" == "x" -o "x$apache_version" == "x" ]; then
	echo "Usage: $0 <php version> <apache version> <update|rollback>"
	exit 1
fi

. $(dirname $0)/config.sh
. $(dirname $0)/lib/functions

if [ "$mode" != "rollback" ]; then 
    init $php_version
fi

function update() {
    cd $spath
    wget http://de2.php.net/get/php-$php_version.tar.bz2/from/de1.php.net/mirror -O php-$php_version.tar.bz2
    if [ $? -ge 1 ]; then
      echo "Couldn't download php-$php_version.tar.bz2"
      exit 1
    fi
    tar -xjvf $spath/php-$php_version.tar.bz2
    # compile php5
    cd $spath/php-$php_version
    # patch php5 to work with recode and imap
    sed -i 's/^\(\s*test.*recode_conflict.*\)/#\1/g' configure
    sed -i 's/^\(\s*test.*recode_conflict.*\)/dnl \1/g' ext/recode/config9.m4
     
    ./configure  --prefix=$ipath/php5/$php_version --with-pear --enable-cli --with-mysql --with-mysql-sock --enable-calendar --with-pcre-regex --with-mysqli --with-mcrypt --with-recode --with-gd --with-zlib --with-imap --with-imap-ssl --with-kerberos --enable-bcmath --with-pdo-mysql --with-apxs2=$ipath/apache2/$apache_version/bin/apxs --with-freetype-dir --enable-gd-native-ttf --with-gettext --enable-dom --enable-sockets --enable-mbstring --enable-intl --with-jpeg-dir=/usr/lib --with-png-dir --enable-zip --with-curl --enable-json --enable-exif --with-libxml-dir=/usr/local/libxml2 --with-openssl --enable-opcache
    make
    if [ $? -eq 1 ]; then
    	echo "ERROR make failed..."
    	exit 1
    fi
    make install
    if [ $? -eq 1 ]; then
    	echo "ERROR make failed..."
    	exit 1
    fi

    # after install delete php module line from httpd.conf
    sed -i '/^LoadModule php5_module/d' /etc/apache2/httpd.conf
    
    # relink everything
    cp libs/libphp5.so $ipath/php5/$php_version/lib
    cd $ipath/php5/$php_version/lib
    ln -s /etc/php5/apache2/php.ini ./
    cd $ipath/php5
    rm -f current && ln -s ./$php_version ./current
    
    rm -f $ipath/apache2/$apache_version/modules/libphp5.so
    ln -s $ipath/php5/current/lib/libphp5.so $ipath/apache2/$apache_version/modules/libphp5.so
    
    if [ ! -f $ipath/php5/current/lib/php.ini ]; then
    	echo "NO php.ini linked to current"
    fi
    apachectl -t
    if [ $? -eq 0 ]; then
    	/bin/systemctl stop apache2
    	sleep 4
    	/bin/systemctl start apache2
    fi
    # needed for sms sending
    $ipath/bin/pear install Log
    # needed for piwik geo Location
    $ipath/bin/pecl install GeoIP
}

function rollback() {
    cd $ipath/php5
    rm -f current && ln -s ./$php_version ./current
    apachectl -t
    if [ $? -eq 0 ]; then
    	/bin/systemctl stop apache2
    	sleep 2
    	/bin/systemctl start apache2
    fi
}


case "$mode" in
    update) update;;
    rollback) rollback;;
    *) echo "usage: $0 <php version> <apache version> <update|rollback>";;
esac
