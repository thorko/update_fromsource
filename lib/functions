init () {
  mkdir -p $ipath
  mkdir -p $spath
  if ! id -u $www_user > /dev/null 2>&1; then
    useradd -s /usr/sbin/nologin -d /var/www $www_user
  fi
}

clean_oldsrc () {
	name=$1

	echo "remove old source"
	rm -rf $name $name.tar.gz $name.tar.bz2 $name.tgz $name.tbz2

}

download_src () {
	link=$1
  target=$2
	
	wget $link -O $target
	if [ $? -ge 1 ]; then
		echo "Couldn't download $target"
		exit 1
	fi
}

extract_and_compile() {
	name=$1
	version=$2
	configure=$3
  auto_apt=0
	
	source=$(ls -1 $name-$version.t*)
	perl -e "'$source' =~ /(tar.gz|tgz)/ || exit 1"
	if [ $? -eq 0 ]; then
		extract="tar -xzvf"
	else 
		extract="tar -xjvf"
	fi

	$extract $source
	if [ $? -ge 1 ]; then
		echo "extracting source $source failed."
		exit 1
	fi

	cd $name-$version

  # install auto-apt if it isn't installed and 
  # distro is Debian/Ubuntu
  if [ $distro == "Debian" -o $distro == "Ubuntu" ]; then
    dpkg -s auto-apt > /dev/null 2>&1
    auto_apt=$?
  fi
  if [ $auto_apt == 1 ]; then
    read -rep $'If you install "auto-apt" and run "auto-apt update", "auto-apt update-local" afterwards
it will automatically install all dependencies when compiling from source
Hit [Enter] to continue or [CTRL-C] to break '
  fi
  # if a current link already exists 
  # assume all dependencies got already installed 
  # so run it without auto-apt
  if [ $auto_apt == 1 -o -L /usr/local/$name/current ]; then
	  ./configure $configure
  else
    auto-apt -y -x run ./configure $configure
  fi

	if [ $? -ge 1 ]; then
		echo "configure with $configure failed."
		exit 1
	fi

	make
	if [ $? -ge 1 ]; then
		echo "make failed."
		exit 1
	fi
	
	make install
	if [ $? -ge 1 ]; then
		echo "make install failed."
		exit 1
	fi

	
}

