#!/bin/bash

mariadb_version=$1

if [ "x$mariadb_version" == "x" ]; then
	echo "Usage: $0 <mariadb version>"
	exit 1
fi

. $(dirname $0)/config.sh
. $(dirname $0)/lib/functions

init

# make a backup of mysql databases
function make_backup () {
	echo -en "Will make a backup of you database...."
  /opt/scripts/backup/mysql_backup.sh
	if [ $? -eq 1 ]; then
		echo "ERROR mysql_backup failed..."
		exit 1
	fi
	echo "Your backup is at /var/backups/mysql"
}

mkdir -p $spath/mariadb && cd $spath/mariadb
clean_oldsrc mariadb-$mariadb_version
download_src "https://downloads.mariadb.org/interstitial/mariadb-5.5.39/source/mariadb-$mariadb_version.tar.gz/from/http://nyc2.mirrors.digitalocean.com/mariadb" mariadb-$mariadb_version.tar.gz

# extract manually
tar -xzvf mariadb-$mariadb_version.tar.gz
cd mariadb-$mariadb_version/BUILD && ./autorun.sh
cd .. && ./configure --prefix=$ipath/mariadb/$mariadb_version --with-mysqld-user=mysql --with-mysqlmanager --enable-profiling --with-plugins=myisam,archive,blackhole,csv,ibmdb2i,innodb_plugin,aria,myisammrg,xtradb,federated,partition,pbxt
if [ $? -ge 1 ]; then
   echo "configure failed."
   exit 1
fi
make
if [ $? -ge 1 ]; then
  echo "make failed."
  exit 1
fi

make install
if [ $? -ge 1 ]; then
  echo "make install failed."
  exit 1
fi

pgrep mysql > /dev/null 2>&1
if [ $? == 0 ]; then
	/opt/scripts/backup/mysql_backup.sh
fi

# relink
/etc/init.d/mysql stop
rm $ipath/mariadb/current 
ln -s $ipath/mariadb/$mariadb_version $ipath/mariadb/current
/etc/init.d/mysql start


